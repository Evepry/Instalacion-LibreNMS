Preparacion para instalar LibreNMS
Instalacion realizada en Ubuntu LTS 22.04

PASO 1
Paquetes requeridos para instalacion
(acl,git,graphviz,mariadb,php,nginx,json,snmp, unzip,pyton,imagemagick,mtr-tiny)

apt install acl curl fping git graphviz imagemagick mariadb-client mariadb-server mtr-tiny nginx-full nmap php-cli php-curl php-fpm php-gd php-gmp php-json php-mbstring php-mysql php-snmp php-xml php-zip rrdtool snmp snmpd whois unzip python3-pymysql python3-dotenv python3-redis python3-setuptools python3-systemd python3-pip

PASO 2
Agregamos el usuario librenms

useradd librenms -d /opt/librenms -M -r -s "$(which bash)"

PASO 3
Descargamos LibreNMS desde el repositorio

cd /opt
git clone https://github.com/librenms/librenms.git

PASO 4
Agregamos permisos al usuario y carpetas LibreNMS

chown -R librenms:librenms /opt/librenms
chmod 771 /opt/librenms
setfacl -d -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/
setfacl -R -m g::rwx /opt/librenms/rrd /opt/librenms/logs /opt/librenms/bootstrap/cache/ /opt/librenms/storage/

PASO 5
Insatalamos dependencias de PHP

Ingresamos al modo superusurio del usuario Librenms

su - librenms

./scripts/composer_wrapper.php install --no-dev

exit

Si el escript falla, realizarlo manualmente

wget https://getcomposer.org/composer-stable.phar
mv composer-stable.phar /usr/bin/composer
chmod +x /usr/bin/composer

PASO 6
Cambiamos Zona horaria
See https://php.net/manual/en/timezones.php for a list of supported timezones. Valid examples are: "America/New_York", "Australia/Brisbane", "Etc/UTC". Ensure date.timezone is set in php.ini to your preferred time zone.

nano /etc/php/8.1/fpm/php.ini
nano /etc/php/8.1/cli/php.ini

timedatectl set-timezone

PASO 7
Configuramos la base de datos MariaDB

nano /etc/mysql/mariadb.conf.d/50-server.cnf

Within the [mysqld] section add:

innodb_file_per_table=1
lower_case_table_names=0

systemctl enable mariadb
systemctl restart mariadb

mysql -u root

Cambiar password a contrase√±a a utilizar

CREATE DATABASE librenms CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER 'librenms'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON librenms.* TO 'librenms'@'localhost';
FLUSH PRIVILEGES;

exit

PASO 8
Configuramos PHP-FPM

cp /etc/php/8.1/fpm/pool.d/www.conf /etc/php/8.1/fpm/pool.d/librenms.conf
nano /etc/php/8.1/fpm/pool.d/librenms.conf

Change [www] to [librenms]:

[librenms]
Change user and group to "librenms":

user = librenms
group = librenms

Change listen to a unique name:

listen = /run/php-fpm-librenms.sock
If there are no other PHP web applications on this server, you may remove www.conf to save some resources. Feel free to tune the performance settings in librenms.conf to meet your needs.

Configuramos el servidor web NGINX

nano /etc/nginx/conf.d/librenms.conf

Agregamos el siguiente codigo en html

server {
 listen      80;
 server_name librenms.example.com;
 root        /opt/librenms/html;
 index       index.php;

 charset utf-8;
 gzip on;
 gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon;
 location / {
  try_files $uri $uri/ /index.php?$query_string;
 }
 location ~ [^/]\.php(/|$) {
  fastcgi_pass unix:/run/php-fpm-librenms.sock;
  fastcgi_split_path_info ^(.+\.php)(/.+)$;
  include fastcgi.conf;
 }
 location ~ /\.(?!well-known).* {
  deny all;
 }
}

rm /etc/nginx/sites-enabled/default

systemctl restart nginx
systemctl restart php8.1-fpm

Otorgamos accesos y configuramos el firewall

ln -s /opt/librenms/lnms /usr/bin/lnms
cp /opt/librenms/misc/lnms-completion.bash /etc/bash_completion.d/

Configuramos el snmpd

cp /opt/librenms/snmpd.conf.example /etc/snmp/snmpd.conf

nano /etc/snmp/snmpd.conf
Edit the text which says RANDOMSTRINGGOESHERE and set your own community string.


curl -o /usr/bin/distro https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro
chmod +x /usr/bin/distro
systemctl enable snmpd
systemctl restart snmpd
Cron job

cp /opt/librenms/librenms.nonroot.cron /etc/cron.d/librenms
NOTE: Keep in mind that cron, by default, only uses a very limited set of environment variables. You may need to configure proxy variables for the cron invocation. Alternatively adding the proxy settings in config.php is possible too. The config.php file will be created in the upcoming steps. Review the following URL after you finished librenms install steps: https://docs.librenms.org//Support/Configuration/#proxy-support

Copy logrotate config
LibreNMS keeps logs in /opt/librenms/logs. Over time these can become large and be rotated out. To rotate out the old logs you can use the provided logrotate config file:


cp /opt/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms
Web installer
Now head to the web installer and follow the on-screen instructions.

http://librenms.example.com/install

The web installer might prompt you to create a config.php file in your librenms install location manually, copying the content displayed on-screen to the file. If you have to do this, please remember to set the permissions on config.php after you copied the on-screen contents to the file. Run:


chown librenms:librenms /opt/librenms/config.php
Final steps
That's it! You now should be able to log in to http://librenms.example.com/. Please note that we have not covered HTTPS setup in this example, so your LibreNMS install is not secure by default. Please do not expose it to the public Internet unless you have configured HTTPS and taken appropriate web server hardening steps.

Add the first device
We now suggest that you add localhost as your first device from within the WebUI.

Troubleshooting
If you ever have issues with your install, run validate.php:


sudo su - librenms
./validate.php
